# 기획 의도 : Flexible 범용 매크로 개발

# 기획
# Tree : Ctrl + X
# Tree : Group, inst 조작 (recur,event 등)
# Tree : Log,File,매크로 3개 레이어 분리
# Tree : 매크로 실행시 값 전달 확인
# Tree : IMTTreeAdvancedTraversal는 따로 interface 파일을 만들기
# Tree : 트리 아이템, 트리, 상태 히스토리 객체에 대한 불변성 보장(방어적 복사)
# Tree : 트리 순회 방식 BFS, DFS
# Tree : 확장된 트리 순회 인터페이스# 필터링 기능이 있는 고급 순회 인터페이스
T = TypeVar('T', bound=IMTTreeItem)
class IMTTreeAdvancedTraversable(Protocol, Generic[T]):
    """확장된 매크로 트리 순회 인터페이스 - 필터링 기능 포함"""
    
    def traverse_filtered(self, predicate: Callable[[T], bool]) -> Iterator[T]:
        """트리를 순회하며 조건에 맞는 아이템 선택"""
        ...
# Tree : 간단한 직렬화 (to_dict, from_dict)는 모델
- 파일/DB 저장 관련 기능은 infra
# Tree : test 준비
# Tree : model, core 의존성 (MTTreeItem)
# Tree : UIFramework와의 통합 구체화
# Tree : Repository, StateManager의 interface는 model에, 구현체는 infra 폴더에
# Tree : 비동기 처리 (load_tree_async : 콜백 기반 또는 async/await 사용)

# Tree : inst 추가 삭제
# Tree : Lock(실행시 제외)
# Tree : Image로 Pos 찾기
# Tree : Group,Ungroup,Copy,Paste
# Tree : Save as
# Opt_ : 시뮬레이션 기능. pos를 클릭할 때 스크린샷도 같이
# Opt_ : image 검색 사용시 검색 영역 지정 기능 추가
# Opt_ : getpos 영역 확대하기 + 멀티모니터 사용 고려
# Opt_ : 실행시 최소화, 완료시 최대화
# Opt_ : 현재 창의 Size 표시

# 진행
# Tree : all 선택
# Tree : 자기 자신에게 이동,종속시킬 때 에러
# Tree : typ,act combo 변경시도 undo 가능하게 : combo 박스 변경 후 treewidget을 찍어야만 undo가 가능한 문제
# Tree : Check된 inst만 실행
# Tree : Ctrl+left click시 복사 붙여넣기 되도록 + 여러개 선택시 모두 복사 되기

# 완료
# Tree : mouse -> sub_wid, key -> sub_wid
# Tree : ch.name 대신 ch.name -> name을 추가하기
# Tree : inst/group, item/top/not top, row/line 등의 네이밍 기준 정리
# Tree : cur 개선하기
# Tree : Subact 코드 정리
# Tree : Item 이동,삽입,삭제
# Tree : Mouse,Key 토글 버튼으로 바꾸기
# Tree : 우클릭 -> Context menu -> Delete
# Tree : Icon 넣기
# Func : Undo